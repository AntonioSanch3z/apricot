# http://www.server-world.info/en/note?os=CentOS_6&p=nfs&f=1
# http://www.server-world.info/en/note?os=CentOS_7&p=nfs

description nfs (
    kind = 'component' and
    short = 'Tool to configure shared directories inside a network.' and
    content = 'Network File System (NFS) client allows you to access shared directories from Linux client. This recipe installs nfs from the repository and shares the /home directory with all the nodes that compose the cluster.

Webpage: http://www.grycap.upv.es/clues/'
)

network public (
    outports contains '111/tcp' and
    outports contains '111/udp' and
    outports contains '2046/tcp' and
    outports contains '2046/udp' and
    outports contains '2047/tcp' and
    outports contains '2047/udp' and
    outports contains '2048/tcp' and
    outports contains '2048/udp' and
    outports contains '2049/tcp' and
    outports contains '2049/udp' and
    outports contains '892/tcp' and
    outports contains '892/udp' and
    outports contains '32803/tcp' and
    outports contains '32769/udp' 
)

system front (
    ec3_templates contains 'nfs' and
    disk.0.applications contains (name = 'ansible.modules.grycap.nfs')
)


configure front (
@begin
  - roles:
    - { role: 'grycap.nfs', nfs_mode: 'front', nfs_exports: [{path: "/home", export: "wn*.localdomain(rw,async,no_root_squash,no_subtree_check,insecure)"}] }

@end
)

system wn ( ec3_templates contains 'nfs' )
configure wn (
@begin
  - roles:
    - { role: 'grycap.nfs', nfs_mode: 'wn', nfs_client_imports: [{ local: "/home", remote: "/home", server_host: '{{ hostvars[groups["front"][0]]["IM_NODE_PRIVATE_IP"] }}' }] }

  - tasks:
    - name: Wait until ssh credentials have been sync
      become: yes
      become_user: __USER_NAME__
      wait_for:
        path: ~/.ssh/known_hosts
        path: ~/.ssh/id_rsa
        path: ~/.ssh/id_rsa.pub
        path: ~/.ssh/authorized_keys

@end

)

include nfs_misc (
  template = '__local_openports'
)
